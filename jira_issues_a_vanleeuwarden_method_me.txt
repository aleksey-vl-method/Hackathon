JIRA ISSUES FOR: a.vanleeuwarden@method.me
================================================================================
Generated on: 2025-09-25
Total Issues Found: 6
================================================================================

COMPLETE JSON DATA:
--------------------------------------------------
[
  {
    "key": "PL-57406",
    "summary": "[Components] Placeholders text should be clearable and not refill",
    "status": "In Grooming",
    "priority": "P3 - Low",
    "issue_type": "Bug",
    "reporter": "Michael Melo",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-09-25T09:53:46.710-0400",
    "updated": "2025-10-02T22:15:13.287-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "The placeholder fields on Text Input and Text area are not required so you should be able to blank them out, currently if you blank it out it refills with the previous value. The rule of thumb here is...",
    "comments_count": 0,
    "labels": [],
    "components": [
      "Text Area",
      "Text Input"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzp001",
      "customfield_10400": "* Update Placeholder for Text area and Text input to allow them to be blank\n\n*Note: Datetime picker also has a placeholder but this one is working as expected*",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32C9810>",
      "customfield_11515": 2.0,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11540": "Pending",
      "customfield_11541": "Pending",
      "customfield_11592": "No"
    }
  },
  {
    "key": "PL-56842",
    "summary": "[App builder] Add screen type radio group to Create Screen interface",
    "status": "Ready For Development",
    "priority": "None",
    "issue_type": "Story",
    "reporter": "Michael Melo",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-09-03T12:27:52.634-0400",
    "updated": "2025-10-02T22:15:57.316-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "This story adds a radio group to the existing \"Create Screen\" interface that allows users to choose between creating Legacy or Next Gen screens. This is an incremental enhancement to the current scree...",
    "comments_count": 1,
    "labels": [],
    "components": [
      "App builder"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzov",
      "customfield_10400": "h2. Functional Requirements\n\n# *Radio Group Implementation*\n## Add a radio group labeled \"Screen Type\" to the Create Screen interface\n## Two radio options: \"Legacy (Designer)\" and \"Next Gen (App Builder)\"\n## \"Legacy (Designer)\" option is selected by default\n## Radio group should be clearly visible but not disruptive to the existing flow\n## Only one option can be selected at a time (standard radio behavior)\n\n!image-20250904-182118.png|width=3840,height=1723,alt=\"image-20250904-182118.png\"!\n\n# *Screen Creation Behavior*\n## When \"Legacy (Designer)\" is selected: Create legacy screen (current behavior)\n## When \"Next Gen (App Builder)\" is selected: Create Next Gen screen with appropriate structure\n## All existing validation rules should continue to work\n## Screen Name and Base Table selection remain unchanged\n# *Feature Flag Control*\n## Radio group only visible when \"Show V3 App builder widgets\" feature flag is enabled\n## Without feature flag, interface remains unchanged (no radio group visible, creates legacy screens)\n# *App Creation Flow*\n## New app creation remains unchanged for now\n## Initial screen when creating a new app continues to be legacy screen\n## This will be updated in a future iteration\n\n\n\n----\n\nh2. Non-Functional Requirements\n\n# Radio selection should be immediate and responsive\n# No breaking changes to existing screen creation functionality\n# Works consistently across all supported browsers\n# UI remains intuitive and doesn't confuse existing users\n\n----\n\nh2. Notes\n\n_This is a temporary implementation to enable Next Gen screen creation. Future iterations will provide a more integrated and polished experience for Next Gen screen creation and management._",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32CDA70>",
      "customfield_11515": 21.0,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11592": "No"
    }
  },
  {
    "key": "PL-56228",
    "summary": "[App builder] Migrate legacy screens to next generation format",
    "status": "In Grooming",
    "priority": "None",
    "issue_type": "Story",
    "reporter": "Michael Melo",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-07-31T08:18:02.050-0400",
    "updated": "2025-10-02T22:17:45.269-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "{panel:bgColor=#fffae6}\nThis is the basic/v1 migration, we are ok with things being funky and layout not being great but that should be solved with the advanced migration(Which could also be AI powere...",
    "comments_count": 2,
    "labels": [],
    "components": [
      "AI",
      "App builder"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzp00b",
      "customfield_10400": "h2. Functional Requirements\n\nh3. +Migration System Core+\n\n# *Migration Trigger & Location*\n## Add a \"Migrate\" button in the app builder header\n## Button only appears for legacy screens\n## Button is hidden for next-gen screens\n## Migrate button is hidden behind the \"Show V3 App builder widgets\" feature flag\n##* Only visible when feature flag is enabled\n##* Note: We should consider renaming this feature flag in the future to better reflect its expanded purpose beyond just V3 widgets\n## Display warning dialog before migration explaining what will happen\n# *Migration Process*\n## Publishes the current version if not already published\n## Creates a new version using screen versioning system\n## New migrated version is created as a draft\n# *Component Compatibility Check*\n## Pre-migration validation for unsupported components\n## Block migration if screen contains:\n##* File attachment component (deprecated, not available in next-gen)\n##* Payments widget (deprecated, now launched via action in popup)\n## Display clear error message explaining why migration cannot proceed\n\nh3. +Component Migration Rules+\n\n# *Expression to Formula Conversion*\n## All expressions must be converted to formulas\n## Applies to:\n##* Grids to Editable grids (automatic conversion)\n##* Calendar components\n##* Any other components using expressions\n# *Deprecated Component Handling*\n## Icons component: Automatically convert to Image widget with SVG mapping\n## Grids (deprecated): Convert to Editable grids\n# *Layout & Positioning*\n## Best-effort placement of components on screen\n## Placement might not be exact (acceptable for V1)\n## Maintain relative positioning where possible\n# *Property Preservation*\n## Label/title length: Do not trim to new limits during migration\n## Trimming only occurs if user edits the field post-migration\n## Grid custom views must be migrated\n## All component properties should be preserved where possible\n\nh3. +Post-Migration Behavior+\n\n# *Screen Editor Access*\n## Migrated screens open directly in app builder when customized\n## Migrated screens can no longer be opened in legacy designer\n## All editing must occur through the next-gen app builder\n# *Screen Integration & Compatibility*\n## Migrated screens remain visible in all screen selection interfaces\n## Screens function normally when selected as navigation destinations\n## No disruption to existing screen references or navigation flows\n## Maintain backwards compatibility with all screen selection mechanisms\n\nh3. +Version Management+\n\n# *Version Creation*\n## Create a new version for the migrated screen\n## Preserve the legacy version for rollback capability\n## Follow platform versioning standards\n\n----\n\nh2. Non-Functional Requirements\n\n# Migration process completes within reasonable time for typical screens\n# Clear error messages for migration failures\n# Migration is reversible through version rollback\n# No data loss during migration process\n# System handles migration failures gracefully\n\n----\n\nh2. Future Considerations & Enhancements\n\n_Note: These enhancements may be implemented in future iterations to improve the migration experience. Current architecture should not preclude these possibilities._\n\n* *Audit Trail Integration*: Log migration events in App Management audit trail with timestamp, user, and screen details\n* *Analytics Integration*: Track migration success rates, common issues, and usage patterns\n* *AI-Powered Layout*: Use AI to analyze screenshots for better field placement\n* *Component Substitution*: Smart replacement for deprecated components (e.g., file attachment to attachment widget)\n* *Batch Migration*: Ability to migrate multiple screens at once\n* *Migration Report*: Detailed report of changes made during migration\n* *Partial Migration*: Allow migration with manual handling of unsupported components\n* *Professional Services Support*: Framework for PS team to handle complex edge cases manually\n* *Migration Preview*: Show users a preview of migrated screen before confirming",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32CF5C0>",
      "customfield_11515": 21.0,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11592": "No"
    }
  },
  {
    "key": "PL-55811",
    "summary": "[App buider] Update existing components to use Mapped/Unmapped component",
    "status": "To Review",
    "priority": "None",
    "issue_type": "TechStory",
    "reporter": "Jane Babiak-Abray",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-07-11T11:39:58.395-0400",
    "updated": "2025-10-02T16:43:50.713-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "This story updates existing component property panels to use the standardized Mapped/Unmapped component that was previously built. This ensures consistency across all components and improves maintaina...",
    "comments_count": 0,
    "labels": [],
    "components": [
      "App builder"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmt",
      "customfield_10400": "h2. Functional Requirements\n\n# *Update Required Components*\n## Replace mapping implementation in Checkbox component\n## Replace mapping implementation in DateTimePicker component\n## Replace mapping implementation in HTML Editor component\n## Replace mapping implementation in Image component\n## Replace mapping implementation in Toggle component\n# *Code Audit*\n## Search codebase for other components with custom mapping implementations\n## Document any additional components found that need updating\n## Update all identified components to use the Mapped/Unmapped component\n# *Consistency Requirements*\n## All updated components must use the exact same Mapped/Unmapped component\n## Maintain existing functionality - no breaking changes\n## Preserve all current property panel features and behaviors\n# *Testing*\n## Verify mapping/unmapping functionality works correctly for each component\n## Ensure no visual or functional regressions\n## Test that existing mapped fields continue to work after the update\n\n----\n\nh2. Non-Functional Requirements\n\n# No performance degradation after component updates\n# Code maintainability improved through consistent implementation\n# Remove duplicated mapping logic from individual components\n# Works consistently across all supported browsers",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={\"cachedValue\":{\"errors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":1,\"lastUpdated\":\"2025-10-02T15:22:16.000-0400\",\"stateCount\":1,\"state\":\"OPEN\",\"dataType\":\"pullrequest\",\"open\":true},\"byInstanceType\":{\"GitHub\":{\"count\":1,\"name\":\"GitHub\"}}}}},\"isStale\":true}}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC3368B00>",
      "customfield_11515": 9.0,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes: MappedFieldSelector used in multiple components which were converted to typescript:\n\n* Checkbox \n* Datetime\n* HTML\n* Image\n* Toggle\n\nRedundant functions were removed or abstracted. \nProjects To Deploy: m-one \u2192 app-builder\nGit Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4737|https://github.com/methodcrm/method-platform-ui/pull/4737|smart-link] \nManual Scripts: {{npm install}} because compiler lib targets have changed.\n\nUse Cases Confirmed: \nTesting instructions: This ticket targets the mapped field component. There should be no change in functionality. Relevant components mentioned above should work as before. ",
      "customfield_11525": "Verified that listed components use mapped/unmapped feature.\n\nText (label) component also uses the mapped/unmapped feature.",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11583": "Aleksey Van Leeuwarden",
      "customfield_11584": "Aleksey Van Leeuwarden",
      "customfield_11592": "No"
    }
  },
  {
    "key": "PL-55065",
    "summary": "[Dropdown] Redesign custom row click configuration (remove toggle)",
    "status": "Done Dev",
    "priority": "None",
    "issue_type": "Story",
    "reporter": "Michael Melo",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-06-10T11:43:58.111-0400",
    "updated": "2025-10-03T08:36:29.402-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "This story redesigns how the dropdown custom row click action is configured. Instead of using the problematic \"Show dropdown action item\" toggle (which doesn't save state properly), we're implementing...",
    "comments_count": 0,
    "labels": [],
    "components": [
      "App builder",
      "Dropdown"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmu",
      "customfield_10400": "h2. Functional Requirements\n\n# *Remove Toggle*\n## Remove the \"Show dropdown action item\" toggle from the UI\n## Remove all backend logic associated with the toggle\n# *Dropdown Action Item Section*\n## Keep the \"Dropdown action item\" section always visible\n## When no action exists: Show \"No actions applied\" with \"+ Add click\" button\n## When action exists: Show \"Custom row click\" as the configured action\n# *Action Item Label (Should already be happening)*\n## Show \"Action item label\" field only when a custom row click is configured\n## Default label format: \"Manage [label name]\" based on the selected dropdown\n## Example: For \"Assigned To\" field \u2192 default label is \"Manage assigned to\"\n## Allow users to customize the label (max 30 characters)\n## Label should be required when shown\n# *Events Section Filtering*\n## Filter out \"Custom row click\" from the Events section at the bottom\n## Only show regular events like \"Change\" and \"Focus\" in the Events list\n## Custom row click is managed exclusively through the \"Dropdown action item\" section\n# *Testing*\n## Verify toggle is completely removed\n## Test adding/removing custom row click actions\n## Confirm action item label shows/hides appropriately\n## Verify default label is generated correctly based on field selection\n## Ensure Custom row click doesn't appear in Events section\n## Test that all other dropdown settings remain functional\n\n----\n\nh2. Non-Functional Requirements\n\n# Performance is not degraded\n# UI remains clean and intuitive\n# Clear separation between custom row click and regular events\n# Consistent behavior across all browsers\n\n----",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC3369E00>",
      "customfield_11515": 1.0,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes:\n\nDropdown Action Item is now in its own section. The section gives the option to add a customrowclick and creates an informative label based upon the display label.\n\n\nProjects To Deploy: m-one, app-builder\nGit Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4746|https://github.com/methodcrm/method-platform-ui/pull/4746|smart-link] \nTesting instructions:\n\n* All 3 components \n\ni) '+' Button \n\nii) Add Click (no action) \n\niii) Action Item Click (has action) \n\nshould open action editor screen.\n\n* the default label should be \u201cManage {Label}",
      "customfield_11525": "This touches only the dropdown component as per the figma diagram.",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11583": "Aleksey Van Leeuwarden",
      "customfield_11584": "Aleksey Van Leeuwarden",
      "customfield_11592": "No"
    }
  },
  {
    "key": "PL-51952",
    "summary": "[App builder] Support action editor for charts",
    "status": "In Dev",
    "priority": "None",
    "issue_type": "Story",
    "reporter": "Michael Melo",
    "assignee": "Aleksey Van Leeuwarden",
    "created": "2025-02-05T12:59:52.161-0500",
    "updated": "2025-10-03T10:28:58.117-0400",
    "due_date": null,
    "project_name": "Platform",
    "project_key": "PL",
    "description": "This story covers the integration of the action editor for chart components within the app builder. The implementation enables users to configure either custom actions OR drill down functionality (mut...",
    "comments_count": 1,
    "labels": [],
    "components": [
      "App builder",
      "Chart"
    ],
    "resolution": null,
    "resolution_description": null,
    "custom_fields": {
      "customfield_10007": "PL-54502",
      "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmuo",
      "customfield_10400": "h2. Functional Requirements\n\nh3. +Chart Action System+\n\n# *Interaction Mode Selection*\n## Charts support three interaction states:\n##* *None* - No interaction enabled (default state)\n##* *Drill down* - Drill down functionality enabled\n##* *Custom action* - Custom actions enabled\n## Interface allows users to select between None, Drill down, or Custom action modes\n## Should not lose any actions or configurations if toggled between drill down and point click.\n# *Custom Action*\n## When Custom action mode is selected, full action editor is available\n## Supports all standard actions available in app builder\n## Actions trigger when user clicks on data points in the chart\n## Data context from clicked point is available to actions (existing functionality)\n# *No Interaction Mode (None)*\n## Default state for new charts\n## No click interactions are enabled on the chart\n## Chart displays data visualization only\n## Users can enable either Drill down or Point Click from this state\n# *Drill down Mode (No change to functionality)*\n## When Drill down mode is enabled, custom  actions are unavailable\n## Drill down configuration includes:\n##* Column selection for drill down grid display\n##* Sort column and order selection (ascending/descending)\n##* Target screen selection for navigation (Filtered to the same base table as the chart)\n## Drill down shows detailed grid view of underlying data when triggered\n## Maintains existing drill down functionality without changes\n# *Configuration Interface*\n## Chart configuration maintains old design system (not being updated)\n## Interactions tab contains the mode selection interface\n## Custom actions appear in Actions/Events section when in app builder\n## Clear labeling indicates the three available states and mutual exclusivity of Drill down and Point Click\n# *Migration and Compatibility*\n## No breaking changes to existing charts\n## Charts with drill down enabled continue to work as before\n## If drill down is on, actions are automatically off\n## New charts default to 'None' state with no interactions enabled\n\n----\n\nh2. Non-Functional Requirements\n\n# Action configuration saves and loads without data loss\n# Support for all chart types without performance degradation\n# Backwards compatibility maintained for existing charts\n# Clear error handling when mode conflicts occur",
      "customfield_10506": 1.0,
      "customfield_10700": "No Code Next Gen",
      "customfield_11100": "{}",
      "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC336B230>",
      "customfield_11515": 5.2,
      "customfield_11522": "No",
      "customfield_11523": "Summary of Changes:\r\nProjects To Deploy:\r\nGit Pull Requests:\r\nManual Scripts:\r\nUse Cases Confirmed:\r\nTesting instructions:",
      "customfield_11525": "Reviewed designed documentation. Component functional requirements match figma designs",
      "customfield_11526": "No",
      "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
      "customfield_11582": [
        "<jira.resources.PropertyHolder object at 0x0000027DC336BBB0>"
      ],
      "customfield_11583": "Aleksey Van Leeuwarden",
      "customfield_11592": "No",
      "customfield_11663": "Pending"
    }
  }
]

================================================================================

FORMATTED ISSUE SUMMARIES:
--------------------------------------------------

ISSUE #1: PL-57406
------------------------------
Summary: [Components] Placeholders text should be clearable and not refill
Status: In Grooming
Priority: P3 - Low
Issue Type: Bug
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-09-25T09:53:46.710-0400
Updated: 2025-10-02T22:15:13.287-0400
Description: The placeholder fields on Text Input and Text area are not required so you should be able to blank them out, currently if you blank it out it refills with the previous value. The rule of thumb here is...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzp001
  customfield_10400: * Update Placeholder for Text area and Text input to allow them to be blank

*Note: Datetime picker also has a placeholder but this one is working as expected*
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC32C9810>
  customfield_11515: 2.0
  customfield_11522: No
  customfield_11523: Summary of Changes: EXAMPLETOREPLACE
Projects To Deploy: EXAMPLETOREPLACE
Git Pull Requests: EXAMPLETOREPLACE
Manual Scripts: EXAMPLETOREPLACE
Use Cases Confirmed: EXAMPLETOREPLACE
Testing instructions: EXAMPLETOREPLACE
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11540: Pending
  customfield_11541: Pending
  customfield_11592: No

RAW JSON FOR PL-57406:
{
  "key": "PL-57406",
  "summary": "[Components] Placeholders text should be clearable and not refill",
  "status": "In Grooming",
  "priority": "P3 - Low",
  "issue_type": "Bug",
  "reporter": "Michael Melo",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-09-25T09:53:46.710-0400",
  "updated": "2025-10-02T22:15:13.287-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "The placeholder fields on Text Input and Text area are not required so you should be able to blank them out, currently if you blank it out it refills with the previous value. The rule of thumb here is...",
  "comments_count": 0,
  "labels": [],
  "components": [
    "Text Area",
    "Text Input"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzp001",
    "customfield_10400": "* Update Placeholder for Text area and Text input to allow them to be blank\n\n*Note: Datetime picker also has a placeholder but this one is working as expected*",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32C9810>",
    "customfield_11515": 2.0,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11540": "Pending",
    "customfield_11541": "Pending",
    "customfield_11592": "No"
  }
}

==================================================

ISSUE #2: PL-56842
------------------------------
Summary: [App builder] Add screen type radio group to Create Screen interface
Status: Ready For Development
Priority: None
Issue Type: Story
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-09-03T12:27:52.634-0400
Updated: 2025-10-02T22:15:57.316-0400
Description: This story adds a radio group to the existing "Create Screen" interface that allows users to choose between creating Legacy or Next Gen screens. This is an incremental enhancement to the current scree...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzov
  customfield_10400: h2. Functional Requirements

# *Radio Group Implementation*
## Add a radio group labeled "Screen Type" to the Create Screen interface
## Two radio options: "Legacy (Designer)" and "Next Gen (App Builder)"
## "Legacy (Designer)" option is selected by default
## Radio group should be clearly visible but not disruptive to the existing flow
## Only one option can be selected at a time (standard radio behavior)

!image-20250904-182118.png|width=3840,height=1723,alt="image-20250904-182118.png"!

# *Screen Creation Behavior*
## When "Legacy (Designer)" is selected: Create legacy screen (current behavior)
## When "Next Gen (App Builder)" is selected: Create Next Gen screen with appropriate structure
## All existing validation rules should continue to work
## Screen Name and Base Table selection remain unchanged
# *Feature Flag Control*
## Radio group only visible when "Show V3 App builder widgets" feature flag is enabled
## Without feature flag, interface remains unchanged (no radio group visible, creates legacy screens)
# *App Creation Flow*
## New app creation remains unchanged for now
## Initial screen when creating a new app continues to be legacy screen
## This will be updated in a future iteration



----

h2. Non-Functional Requirements

# Radio selection should be immediate and responsive
# No breaking changes to existing screen creation functionality
# Works consistently across all supported browsers
# UI remains intuitive and doesn't confuse existing users

----

h2. Notes

_This is a temporary implementation to enable Next Gen screen creation. Future iterations will provide a more integrated and polished experience for Next Gen screen creation and management._
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC32CDA70>
  customfield_11515: 21.0
  customfield_11522: No
  customfield_11523: Summary of Changes: EXAMPLETOREPLACE
Projects To Deploy: EXAMPLETOREPLACE
Git Pull Requests: EXAMPLETOREPLACE
Manual Scripts: EXAMPLETOREPLACE
Use Cases Confirmed: EXAMPLETOREPLACE
Testing instructions: EXAMPLETOREPLACE
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11592: No

RAW JSON FOR PL-56842:
{
  "key": "PL-56842",
  "summary": "[App builder] Add screen type radio group to Create Screen interface",
  "status": "Ready For Development",
  "priority": "None",
  "issue_type": "Story",
  "reporter": "Michael Melo",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-09-03T12:27:52.634-0400",
  "updated": "2025-10-02T22:15:57.316-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "This story adds a radio group to the existing \"Create Screen\" interface that allows users to choose between creating Legacy or Next Gen screens. This is an incremental enhancement to the current scree...",
  "comments_count": 1,
  "labels": [],
  "components": [
    "App builder"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzov",
    "customfield_10400": "h2. Functional Requirements\n\n# *Radio Group Implementation*\n## Add a radio group labeled \"Screen Type\" to the Create Screen interface\n## Two radio options: \"Legacy (Designer)\" and \"Next Gen (App Builder)\"\n## \"Legacy (Designer)\" option is selected by default\n## Radio group should be clearly visible but not disruptive to the existing flow\n## Only one option can be selected at a time (standard radio behavior)\n\n!image-20250904-182118.png|width=3840,height=1723,alt=\"image-20250904-182118.png\"!\n\n# *Screen Creation Behavior*\n## When \"Legacy (Designer)\" is selected: Create legacy screen (current behavior)\n## When \"Next Gen (App Builder)\" is selected: Create Next Gen screen with appropriate structure\n## All existing validation rules should continue to work\n## Screen Name and Base Table selection remain unchanged\n# *Feature Flag Control*\n## Radio group only visible when \"Show V3 App builder widgets\" feature flag is enabled\n## Without feature flag, interface remains unchanged (no radio group visible, creates legacy screens)\n# *App Creation Flow*\n## New app creation remains unchanged for now\n## Initial screen when creating a new app continues to be legacy screen\n## This will be updated in a future iteration\n\n\n\n----\n\nh2. Non-Functional Requirements\n\n# Radio selection should be immediate and responsive\n# No breaking changes to existing screen creation functionality\n# Works consistently across all supported browsers\n# UI remains intuitive and doesn't confuse existing users\n\n----\n\nh2. Notes\n\n_This is a temporary implementation to enable Next Gen screen creation. Future iterations will provide a more integrated and polished experience for Next Gen screen creation and management._",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32CDA70>",
    "customfield_11515": 21.0,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11592": "No"
  }
}

==================================================

ISSUE #3: PL-56228
------------------------------
Summary: [App builder] Migrate legacy screens to next generation format
Status: In Grooming
Priority: None
Issue Type: Story
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-07-31T08:18:02.050-0400
Updated: 2025-10-02T22:17:45.269-0400
Description: {panel:bgColor=#fffae6}
This is the basic/v1 migration, we are ok with things being funky and layout not being great but that should be solved with the advanced migration(Which could also be AI powere...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzp00b
  customfield_10400: h2. Functional Requirements

h3. +Migration System Core+

# *Migration Trigger & Location*
## Add a "Migrate" button in the app builder header
## Button only appears for legacy screens
## Button is hidden for next-gen screens
## Migrate button is hidden behind the "Show V3 App builder widgets" feature flag
##* Only visible when feature flag is enabled
##* Note: We should consider renaming this feature flag in the future to better reflect its expanded purpose beyond just V3 widgets
## Display warning dialog before migration explaining what will happen
# *Migration Process*
## Publishes the current version if not already published
## Creates a new version using screen versioning system
## New migrated version is created as a draft
# *Component Compatibility Check*
## Pre-migration validation for unsupported components
## Block migration if screen contains:
##* File attachment component (deprecated, not available in next-gen)
##* Payments widget (deprecated, now launched via action in popup)
## Display clear error message explaining why migration cannot proceed

h3. +Component Migration Rules+

# *Expression to Formula Conversion*
## All expressions must be converted to formulas
## Applies to:
##* Grids to Editable grids (automatic conversion)
##* Calendar components
##* Any other components using expressions
# *Deprecated Component Handling*
## Icons component: Automatically convert to Image widget with SVG mapping
## Grids (deprecated): Convert to Editable grids
# *Layout & Positioning*
## Best-effort placement of components on screen
## Placement might not be exact (acceptable for V1)
## Maintain relative positioning where possible
# *Property Preservation*
## Label/title length: Do not trim to new limits during migration
## Trimming only occurs if user edits the field post-migration
## Grid custom views must be migrated
## All component properties should be preserved where possible

h3. +Post-Migration Behavior+

# *Screen Editor Access*
## Migrated screens open directly in app builder when customized
## Migrated screens can no longer be opened in legacy designer
## All editing must occur through the next-gen app builder
# *Screen Integration & Compatibility*
## Migrated screens remain visible in all screen selection interfaces
## Screens function normally when selected as navigation destinations
## No disruption to existing screen references or navigation flows
## Maintain backwards compatibility with all screen selection mechanisms

h3. +Version Management+

# *Version Creation*
## Create a new version for the migrated screen
## Preserve the legacy version for rollback capability
## Follow platform versioning standards

----

h2. Non-Functional Requirements

# Migration process completes within reasonable time for typical screens
# Clear error messages for migration failures
# Migration is reversible through version rollback
# No data loss during migration process
# System handles migration failures gracefully

----

h2. Future Considerations & Enhancements

_Note: These enhancements may be implemented in future iterations to improve the migration experience. Current architecture should not preclude these possibilities._

* *Audit Trail Integration*: Log migration events in App Management audit trail with timestamp, user, and screen details
* *Analytics Integration*: Track migration success rates, common issues, and usage patterns
* *AI-Powered Layout*: Use AI to analyze screenshots for better field placement
* *Component Substitution*: Smart replacement for deprecated components (e.g., file attachment to attachment widget)
* *Batch Migration*: Ability to migrate multiple screens at once
* *Migration Report*: Detailed report of changes made during migration
* *Partial Migration*: Allow migration with manual handling of unsupported components
* *Professional Services Support*: Framework for PS team to handle complex edge cases manually
* *Migration Preview*: Show users a preview of migrated screen before confirming
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC32CF5C0>
  customfield_11515: 21.0
  customfield_11522: No
  customfield_11523: Summary of Changes: EXAMPLETOREPLACE
Projects To Deploy: EXAMPLETOREPLACE
Git Pull Requests: EXAMPLETOREPLACE
Manual Scripts: EXAMPLETOREPLACE
Use Cases Confirmed: EXAMPLETOREPLACE
Testing instructions: EXAMPLETOREPLACE
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11592: No

RAW JSON FOR PL-56228:
{
  "key": "PL-56228",
  "summary": "[App builder] Migrate legacy screens to next generation format",
  "status": "In Grooming",
  "priority": "None",
  "issue_type": "Story",
  "reporter": "Michael Melo",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-07-31T08:18:02.050-0400",
  "updated": "2025-10-02T22:17:45.269-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "{panel:bgColor=#fffae6}\nThis is the basic/v1 migration, we are ok with things being funky and layout not being great but that should be solved with the advanced migration(Which could also be AI powere...",
  "comments_count": 2,
  "labels": [],
  "components": [
    "AI",
    "App builder"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzp00b",
    "customfield_10400": "h2. Functional Requirements\n\nh3. +Migration System Core+\n\n# *Migration Trigger & Location*\n## Add a \"Migrate\" button in the app builder header\n## Button only appears for legacy screens\n## Button is hidden for next-gen screens\n## Migrate button is hidden behind the \"Show V3 App builder widgets\" feature flag\n##* Only visible when feature flag is enabled\n##* Note: We should consider renaming this feature flag in the future to better reflect its expanded purpose beyond just V3 widgets\n## Display warning dialog before migration explaining what will happen\n# *Migration Process*\n## Publishes the current version if not already published\n## Creates a new version using screen versioning system\n## New migrated version is created as a draft\n# *Component Compatibility Check*\n## Pre-migration validation for unsupported components\n## Block migration if screen contains:\n##* File attachment component (deprecated, not available in next-gen)\n##* Payments widget (deprecated, now launched via action in popup)\n## Display clear error message explaining why migration cannot proceed\n\nh3. +Component Migration Rules+\n\n# *Expression to Formula Conversion*\n## All expressions must be converted to formulas\n## Applies to:\n##* Grids to Editable grids (automatic conversion)\n##* Calendar components\n##* Any other components using expressions\n# *Deprecated Component Handling*\n## Icons component: Automatically convert to Image widget with SVG mapping\n## Grids (deprecated): Convert to Editable grids\n# *Layout & Positioning*\n## Best-effort placement of components on screen\n## Placement might not be exact (acceptable for V1)\n## Maintain relative positioning where possible\n# *Property Preservation*\n## Label/title length: Do not trim to new limits during migration\n## Trimming only occurs if user edits the field post-migration\n## Grid custom views must be migrated\n## All component properties should be preserved where possible\n\nh3. +Post-Migration Behavior+\n\n# *Screen Editor Access*\n## Migrated screens open directly in app builder when customized\n## Migrated screens can no longer be opened in legacy designer\n## All editing must occur through the next-gen app builder\n# *Screen Integration & Compatibility*\n## Migrated screens remain visible in all screen selection interfaces\n## Screens function normally when selected as navigation destinations\n## No disruption to existing screen references or navigation flows\n## Maintain backwards compatibility with all screen selection mechanisms\n\nh3. +Version Management+\n\n# *Version Creation*\n## Create a new version for the migrated screen\n## Preserve the legacy version for rollback capability\n## Follow platform versioning standards\n\n----\n\nh2. Non-Functional Requirements\n\n# Migration process completes within reasonable time for typical screens\n# Clear error messages for migration failures\n# Migration is reversible through version rollback\n# No data loss during migration process\n# System handles migration failures gracefully\n\n----\n\nh2. Future Considerations & Enhancements\n\n_Note: These enhancements may be implemented in future iterations to improve the migration experience. Current architecture should not preclude these possibilities._\n\n* *Audit Trail Integration*: Log migration events in App Management audit trail with timestamp, user, and screen details\n* *Analytics Integration*: Track migration success rates, common issues, and usage patterns\n* *AI-Powered Layout*: Use AI to analyze screenshots for better field placement\n* *Component Substitution*: Smart replacement for deprecated components (e.g., file attachment to attachment widget)\n* *Batch Migration*: Ability to migrate multiple screens at once\n* *Migration Report*: Detailed report of changes made during migration\n* *Partial Migration*: Allow migration with manual handling of unsupported components\n* *Professional Services Support*: Framework for PS team to handle complex edge cases manually\n* *Migration Preview*: Show users a preview of migrated screen before confirming",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC32CF5C0>",
    "customfield_11515": 21.0,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes: EXAMPLETOREPLACE\r\nProjects To Deploy: EXAMPLETOREPLACE\r\nGit Pull Requests: EXAMPLETOREPLACE\r\nManual Scripts: EXAMPLETOREPLACE\r\nUse Cases Confirmed: EXAMPLETOREPLACE\r\nTesting instructions: EXAMPLETOREPLACE",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11592": "No"
  }
}

==================================================

ISSUE #4: PL-55811
------------------------------
Summary: [App buider] Update existing components to use Mapped/Unmapped component
Status: To Review
Priority: None
Issue Type: TechStory
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-07-11T11:39:58.395-0400
Updated: 2025-10-02T16:43:50.713-0400
Description: This story updates existing component property panels to use the standardized Mapped/Unmapped component that was previously built. This ensures consistency across all components and improves maintaina...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzmt
  customfield_10400: h2. Functional Requirements

# *Update Required Components*
## Replace mapping implementation in Checkbox component
## Replace mapping implementation in DateTimePicker component
## Replace mapping implementation in HTML Editor component
## Replace mapping implementation in Image component
## Replace mapping implementation in Toggle component
# *Code Audit*
## Search codebase for other components with custom mapping implementations
## Document any additional components found that need updating
## Update all identified components to use the Mapped/Unmapped component
# *Consistency Requirements*
## All updated components must use the exact same Mapped/Unmapped component
## Maintain existing functionality - no breaking changes
## Preserve all current property panel features and behaviors
# *Testing*
## Verify mapping/unmapping functionality works correctly for each component
## Ensure no visual or functional regressions
## Test that existing mapped fields continue to work after the update

----

h2. Non-Functional Requirements

# No performance degradation after component updates
# Code maintainability improved through consistent implementation
# Remove duplicated mapping logic from individual components
# Works consistently across all supported browsers
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={"cachedValue":{"errors":[],"summary":{"pullrequest":{"overall":{"count":1,"lastUpdated":"2025-10-02T15:22:16.000-0400","stateCount":1,"state":"OPEN","dataType":"pullrequest","open":true},"byInstanceType":{"GitHub":{"count":1,"name":"GitHub"}}}}},"isStale":true}}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC3368B00>
  customfield_11515: 9.0
  customfield_11522: No
  customfield_11523: Summary of Changes: MappedFieldSelector used in multiple components which were converted to typescript:

* Checkbox 
* Datetime
* HTML
* Image
* Toggle

Redundant functions were removed or abstracted. 
Projects To Deploy: m-one → app-builder
Git Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4737|https://github.com/methodcrm/method-platform-ui/pull/4737|smart-link] 
Manual Scripts: {{npm install}} because compiler lib targets have changed.

Use Cases Confirmed: 
Testing instructions: This ticket targets the mapped field component. There should be no change in functionality. Relevant components mentioned above should work as before. 
  customfield_11525: Verified that listed components use mapped/unmapped feature.

Text (label) component also uses the mapped/unmapped feature.
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11583: Aleksey Van Leeuwarden
  customfield_11584: Aleksey Van Leeuwarden
  customfield_11592: No

RAW JSON FOR PL-55811:
{
  "key": "PL-55811",
  "summary": "[App buider] Update existing components to use Mapped/Unmapped component",
  "status": "To Review",
  "priority": "None",
  "issue_type": "TechStory",
  "reporter": "Jane Babiak-Abray",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-07-11T11:39:58.395-0400",
  "updated": "2025-10-02T16:43:50.713-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "This story updates existing component property panels to use the standardized Mapped/Unmapped component that was previously built. This ensures consistency across all components and improves maintaina...",
  "comments_count": 0,
  "labels": [],
  "components": [
    "App builder"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmt",
    "customfield_10400": "h2. Functional Requirements\n\n# *Update Required Components*\n## Replace mapping implementation in Checkbox component\n## Replace mapping implementation in DateTimePicker component\n## Replace mapping implementation in HTML Editor component\n## Replace mapping implementation in Image component\n## Replace mapping implementation in Toggle component\n# *Code Audit*\n## Search codebase for other components with custom mapping implementations\n## Document any additional components found that need updating\n## Update all identified components to use the Mapped/Unmapped component\n# *Consistency Requirements*\n## All updated components must use the exact same Mapped/Unmapped component\n## Maintain existing functionality - no breaking changes\n## Preserve all current property panel features and behaviors\n# *Testing*\n## Verify mapping/unmapping functionality works correctly for each component\n## Ensure no visual or functional regressions\n## Test that existing mapped fields continue to work after the update\n\n----\n\nh2. Non-Functional Requirements\n\n# No performance degradation after component updates\n# Code maintainability improved through consistent implementation\n# Remove duplicated mapping logic from individual components\n# Works consistently across all supported browsers",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={\"cachedValue\":{\"errors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":1,\"lastUpdated\":\"2025-10-02T15:22:16.000-0400\",\"stateCount\":1,\"state\":\"OPEN\",\"dataType\":\"pullrequest\",\"open\":true},\"byInstanceType\":{\"GitHub\":{\"count\":1,\"name\":\"GitHub\"}}}}},\"isStale\":true}}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC3368B00>",
    "customfield_11515": 9.0,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes: MappedFieldSelector used in multiple components which were converted to typescript:\n\n* Checkbox \n* Datetime\n* HTML\n* Image\n* Toggle\n\nRedundant functions were removed or abstracted. \nProjects To Deploy: m-one \u2192 app-builder\nGit Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4737|https://github.com/methodcrm/method-platform-ui/pull/4737|smart-link] \nManual Scripts: {{npm install}} because compiler lib targets have changed.\n\nUse Cases Confirmed: \nTesting instructions: This ticket targets the mapped field component. There should be no change in functionality. Relevant components mentioned above should work as before. ",
    "customfield_11525": "Verified that listed components use mapped/unmapped feature.\n\nText (label) component also uses the mapped/unmapped feature.",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11583": "Aleksey Van Leeuwarden",
    "customfield_11584": "Aleksey Van Leeuwarden",
    "customfield_11592": "No"
  }
}

==================================================

ISSUE #5: PL-55065
------------------------------
Summary: [Dropdown] Redesign custom row click configuration (remove toggle)
Status: Done Dev
Priority: None
Issue Type: Story
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-06-10T11:43:58.111-0400
Updated: 2025-10-03T08:36:29.402-0400
Description: This story redesigns how the dropdown custom row click action is configured. Instead of using the problematic "Show dropdown action item" toggle (which doesn't save state properly), we're implementing...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzmu
  customfield_10400: h2. Functional Requirements

# *Remove Toggle*
## Remove the "Show dropdown action item" toggle from the UI
## Remove all backend logic associated with the toggle
# *Dropdown Action Item Section*
## Keep the "Dropdown action item" section always visible
## When no action exists: Show "No actions applied" with "+ Add click" button
## When action exists: Show "Custom row click" as the configured action
# *Action Item Label (Should already be happening)*
## Show "Action item label" field only when a custom row click is configured
## Default label format: "Manage [label name]" based on the selected dropdown
## Example: For "Assigned To" field → default label is "Manage assigned to"
## Allow users to customize the label (max 30 characters)
## Label should be required when shown
# *Events Section Filtering*
## Filter out "Custom row click" from the Events section at the bottom
## Only show regular events like "Change" and "Focus" in the Events list
## Custom row click is managed exclusively through the "Dropdown action item" section
# *Testing*
## Verify toggle is completely removed
## Test adding/removing custom row click actions
## Confirm action item label shows/hides appropriately
## Verify default label is generated correctly based on field selection
## Ensure Custom row click doesn't appear in Events section
## Test that all other dropdown settings remain functional

----

h2. Non-Functional Requirements

# Performance is not degraded
# UI remains clean and intuitive
# Clear separation between custom row click and regular events
# Consistent behavior across all browsers

----
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC3369E00>
  customfield_11515: 1.0
  customfield_11522: No
  customfield_11523: Summary of Changes:

Dropdown Action Item is now in its own section. The section gives the option to add a customrowclick and creates an informative label based upon the display label.


Projects To Deploy: m-one, app-builder
Git Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4746|https://github.com/methodcrm/method-platform-ui/pull/4746|smart-link] 
Testing instructions:

* All 3 components 

i) '+' Button 

ii) Add Click (no action) 

iii) Action Item Click (has action) 

should open action editor screen.

* the default label should be “Manage {Label}
  customfield_11525: This touches only the dropdown component as per the figma diagram.
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11583: Aleksey Van Leeuwarden
  customfield_11584: Aleksey Van Leeuwarden
  customfield_11592: No

RAW JSON FOR PL-55065:
{
  "key": "PL-55065",
  "summary": "[Dropdown] Redesign custom row click configuration (remove toggle)",
  "status": "Done Dev",
  "priority": "None",
  "issue_type": "Story",
  "reporter": "Michael Melo",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-06-10T11:43:58.111-0400",
  "updated": "2025-10-03T08:36:29.402-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "This story redesigns how the dropdown custom row click action is configured. Instead of using the problematic \"Show dropdown action item\" toggle (which doesn't save state properly), we're implementing...",
  "comments_count": 0,
  "labels": [],
  "components": [
    "App builder",
    "Dropdown"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmu",
    "customfield_10400": "h2. Functional Requirements\n\n# *Remove Toggle*\n## Remove the \"Show dropdown action item\" toggle from the UI\n## Remove all backend logic associated with the toggle\n# *Dropdown Action Item Section*\n## Keep the \"Dropdown action item\" section always visible\n## When no action exists: Show \"No actions applied\" with \"+ Add click\" button\n## When action exists: Show \"Custom row click\" as the configured action\n# *Action Item Label (Should already be happening)*\n## Show \"Action item label\" field only when a custom row click is configured\n## Default label format: \"Manage [label name]\" based on the selected dropdown\n## Example: For \"Assigned To\" field \u2192 default label is \"Manage assigned to\"\n## Allow users to customize the label (max 30 characters)\n## Label should be required when shown\n# *Events Section Filtering*\n## Filter out \"Custom row click\" from the Events section at the bottom\n## Only show regular events like \"Change\" and \"Focus\" in the Events list\n## Custom row click is managed exclusively through the \"Dropdown action item\" section\n# *Testing*\n## Verify toggle is completely removed\n## Test adding/removing custom row click actions\n## Confirm action item label shows/hides appropriately\n## Verify default label is generated correctly based on field selection\n## Ensure Custom row click doesn't appear in Events section\n## Test that all other dropdown settings remain functional\n\n----\n\nh2. Non-Functional Requirements\n\n# Performance is not degraded\n# UI remains clean and intuitive\n# Clear separation between custom row click and regular events\n# Consistent behavior across all browsers\n\n----",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC3369E00>",
    "customfield_11515": 1.0,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes:\n\nDropdown Action Item is now in its own section. The section gives the option to add a customrowclick and creates an informative label based upon the display label.\n\n\nProjects To Deploy: m-one, app-builder\nGit Pull Requests: [https://github.com/methodcrm/method-platform-ui/pull/4746|https://github.com/methodcrm/method-platform-ui/pull/4746|smart-link] \nTesting instructions:\n\n* All 3 components \n\ni) '+' Button \n\nii) Add Click (no action) \n\niii) Action Item Click (has action) \n\nshould open action editor screen.\n\n* the default label should be \u201cManage {Label}",
    "customfield_11525": "This touches only the dropdown component as per the figma diagram.",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11583": "Aleksey Van Leeuwarden",
    "customfield_11584": "Aleksey Van Leeuwarden",
    "customfield_11592": "No"
  }
}

==================================================

ISSUE #6: PL-51952
------------------------------
Summary: [App builder] Support action editor for charts
Status: In Dev
Priority: None
Issue Type: Story
Assignee: Aleksey Van Leeuwarden
Project: Platform (PL)
Created: 2025-02-05T12:59:52.161-0500
Updated: 2025-10-03T10:28:58.117-0400
Description: This story covers the integration of the action editor for chart components within the app builder. The implementation enables users to configure either custom actions OR drill down functionality (mut...
Custom Fields:
  customfield_10007: PL-54502
  customfield_10011: 0|i00000:o04yz3zgfh1zxzzmuo
  customfield_10400: h2. Functional Requirements

h3. +Chart Action System+

# *Interaction Mode Selection*
## Charts support three interaction states:
##* *None* - No interaction enabled (default state)
##* *Drill down* - Drill down functionality enabled
##* *Custom action* - Custom actions enabled
## Interface allows users to select between None, Drill down, or Custom action modes
## Should not lose any actions or configurations if toggled between drill down and point click.
# *Custom Action*
## When Custom action mode is selected, full action editor is available
## Supports all standard actions available in app builder
## Actions trigger when user clicks on data points in the chart
## Data context from clicked point is available to actions (existing functionality)
# *No Interaction Mode (None)*
## Default state for new charts
## No click interactions are enabled on the chart
## Chart displays data visualization only
## Users can enable either Drill down or Point Click from this state
# *Drill down Mode (No change to functionality)*
## When Drill down mode is enabled, custom  actions are unavailable
## Drill down configuration includes:
##* Column selection for drill down grid display
##* Sort column and order selection (ascending/descending)
##* Target screen selection for navigation (Filtered to the same base table as the chart)
## Drill down shows detailed grid view of underlying data when triggered
## Maintains existing drill down functionality without changes
# *Configuration Interface*
## Chart configuration maintains old design system (not being updated)
## Interactions tab contains the mode selection interface
## Custom actions appear in Actions/Events section when in app builder
## Clear labeling indicates the three available states and mutual exclusivity of Drill down and Point Click
# *Migration and Compatibility*
## No breaking changes to existing charts
## Charts with drill down enabled continue to work as before
## If drill down is on, actions are automatically off
## New charts default to 'None' state with no interactions enabled

----

h2. Non-Functional Requirements

# Action configuration saves and loads without data loss
# Support for all chart types without performance degradation
# Backwards compatibility maintained for existing charts
# Clear error handling when mode conflicts occur
  customfield_10506: 1.0
  customfield_10700: No Code Next Gen
  customfield_11100: {}
  customfield_11200: <jira.resources.PropertyHolder object at 0x0000027DC336B230>
  customfield_11515: 5.2
  customfield_11522: No
  customfield_11523: Summary of Changes:
Projects To Deploy:
Git Pull Requests:
Manual Scripts:
Use Cases Confirmed:
Testing instructions:
  customfield_11525: Reviewed designed documentation. Component functional requirements match figma designs
  customfield_11526: No
  customfield_11527: You can find more information about best practices for creating Jira tickets here:
  customfield_11582: [<jira.resources.PropertyHolder object at 0x0000027DC336BBB0>]
  customfield_11583: Aleksey Van Leeuwarden
  customfield_11592: No
  customfield_11663: Pending

RAW JSON FOR PL-51952:
{
  "key": "PL-51952",
  "summary": "[App builder] Support action editor for charts",
  "status": "In Dev",
  "priority": "None",
  "issue_type": "Story",
  "reporter": "Michael Melo",
  "assignee": "Aleksey Van Leeuwarden",
  "created": "2025-02-05T12:59:52.161-0500",
  "updated": "2025-10-03T10:28:58.117-0400",
  "due_date": null,
  "project_name": "Platform",
  "project_key": "PL",
  "description": "This story covers the integration of the action editor for chart components within the app builder. The implementation enables users to configure either custom actions OR drill down functionality (mut...",
  "comments_count": 1,
  "labels": [],
  "components": [
    "App builder",
    "Chart"
  ],
  "resolution": null,
  "resolution_description": null,
  "custom_fields": {
    "customfield_10007": "PL-54502",
    "customfield_10011": "0|i00000:o04yz3zgfh1zxzzmuo",
    "customfield_10400": "h2. Functional Requirements\n\nh3. +Chart Action System+\n\n# *Interaction Mode Selection*\n## Charts support three interaction states:\n##* *None* - No interaction enabled (default state)\n##* *Drill down* - Drill down functionality enabled\n##* *Custom action* - Custom actions enabled\n## Interface allows users to select between None, Drill down, or Custom action modes\n## Should not lose any actions or configurations if toggled between drill down and point click.\n# *Custom Action*\n## When Custom action mode is selected, full action editor is available\n## Supports all standard actions available in app builder\n## Actions trigger when user clicks on data points in the chart\n## Data context from clicked point is available to actions (existing functionality)\n# *No Interaction Mode (None)*\n## Default state for new charts\n## No click interactions are enabled on the chart\n## Chart displays data visualization only\n## Users can enable either Drill down or Point Click from this state\n# *Drill down Mode (No change to functionality)*\n## When Drill down mode is enabled, custom  actions are unavailable\n## Drill down configuration includes:\n##* Column selection for drill down grid display\n##* Sort column and order selection (ascending/descending)\n##* Target screen selection for navigation (Filtered to the same base table as the chart)\n## Drill down shows detailed grid view of underlying data when triggered\n## Maintains existing drill down functionality without changes\n# *Configuration Interface*\n## Chart configuration maintains old design system (not being updated)\n## Interactions tab contains the mode selection interface\n## Custom actions appear in Actions/Events section when in app builder\n## Clear labeling indicates the three available states and mutual exclusivity of Drill down and Point Click\n# *Migration and Compatibility*\n## No breaking changes to existing charts\n## Charts with drill down enabled continue to work as before\n## If drill down is on, actions are automatically off\n## New charts default to 'None' state with no interactions enabled\n\n----\n\nh2. Non-Functional Requirements\n\n# Action configuration saves and loads without data loss\n# Support for all chart types without performance degradation\n# Backwards compatibility maintained for existing charts\n# Clear error handling when mode conflicts occur",
    "customfield_10506": 1.0,
    "customfield_10700": "No Code Next Gen",
    "customfield_11100": "{}",
    "customfield_11200": "<jira.resources.PropertyHolder object at 0x0000027DC336B230>",
    "customfield_11515": 5.2,
    "customfield_11522": "No",
    "customfield_11523": "Summary of Changes:\r\nProjects To Deploy:\r\nGit Pull Requests:\r\nManual Scripts:\r\nUse Cases Confirmed:\r\nTesting instructions:",
    "customfield_11525": "Reviewed designed documentation. Component functional requirements match figma designs",
    "customfield_11526": "No",
    "customfield_11527": "You can find more information about best practices for creating Jira tickets here:",
    "customfield_11582": [
      "<jira.resources.PropertyHolder object at 0x0000027DC336BBB0>"
    ],
    "customfield_11583": "Aleksey Van Leeuwarden",
    "customfield_11592": "No",
    "customfield_11663": "Pending"
  }
}

==================================================

